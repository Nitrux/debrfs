#!/usr/bin/env bash

#############################################################################################################################################################################
#   The license used for this file and its contents is: BSD-3-Clause                                                                                                        #
#                                                                                                                                                                           #
#   Copyright <2022-2024> <Uri Herrera <uri_herrera@nxos.org>>                                                                                                               #
#                                                                                                                                                                           #
#   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:                          #
#                                                                                                                                                                           #
#    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.                                        #
#                                                                                                                                                                           #
#    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer                                      #
#       in the documentation and/or other materials provided with the distribution.                                                                                         #
#                                                                                                                                                                           #
#    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software                    #
#       without specific prior written permission.                                                                                                                          #
#                                                                                                                                                                           #
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,                      #
#    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS                  #
#    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE                 #
#    GOODS OR SERVICES; LOSS OF USE, DATA,   OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,                      #
#    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   #
#############################################################################################################################################################################


# -- Exit on errors.

set -eu


# -- Set program name and version.

TOOL_NAME="debrfs"


# -- Check if running with root privileges or ask for sudo.

(( EUID != 0 )) && exec sudo -- "$0" "$@"


# -- Define the path of the debrfs configuration file.

CONFIG_FILE=/etc/debrfs.conf


# -- Load values from the configuration file.

if [[ -f $CONFIG_FILE ]]; then
    echo "Configuration file found! Loading..."
    # shellcheck source=/dev/null
    . "$CONFIG_FILE"
else
    echo "Configuration file not found! Exiting..." >&2
    exit 1
fi


# -- Print informative messages to stderr.

puts_info() {
	if [ -n "$1" ]; then
		printf "%s: \e[34mInfo:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Print success messages to stderr.

puts_success() {
	if [ -n "$1" ]; then
		printf "%s: \e[32mSuccess:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Print error messages to stderr.

puts_error() {
	if [ -n "$1" ]; then
		printf "%s: \e[31mError:\e[0m %b\n" "$TOOL_NAME" "$*" >&2
	fi
}


# -- Print messages or text using multiple lines to stderr.

print_message() {
    if [ $# -eq 0 ]; then
        printf "\n" >&2
    else
        printf "%s\n" "$@" >&2
    fi
}


# -- Print warning messages to stderr.

puts_warning() {
    if [ -n "$1" ]; then
        printf "%s: \e[33mWarning:\e[0m %s\n" "$TOOL_NAME" "$*" >&2
    fi
}


# -- Function to display help message.

show_help() {
    cat <<EOF

Description:
    Create small Debian rootfs TAR files.

Report bugs at: https://github.com/Nitrux/nuts/issues.

Usage: $(basename "$0") <command>

Commands:
  create    Create and compress the root filesystem (rootfs).
  help      Display this help message.

Examples:
  sudo $(basename "$0") create
EOF
}


# -- Function to create the root filesystem.

create_rootfs() {
    puts_info "Starting root filesystem creation process..."

    if ! dpkg -s "$REQUIRED_PKG" >/dev/null 2>&1; then
        puts_warning "No $REQUIRED_PKG found. Installing $REQUIRED_PKG..."
        apt -y install --no-install-recommends "$REQUIRED_PKG"
    else
        puts_info "Package $REQUIRED_PKG is already installed."
    fi

    if [[ ! -d $ROOTFS_DIR ]]; then
        puts_warning "Directory not found! Creating..."
        mkdir -p "$ROOTFS_DIR"
    else
        puts_info "Directory found! Cleaning..."
        rm -rf "$ROOTFS_DIR" && mkdir -p "$ROOTFS_DIR"
    fi

    debootstrap --variant="$ROOTFS_VARIANT" --include="$ROOTFS_INCLUDE" --exclude="$ROOTFS_EXCLUDE" --arch "$ROOTFS_ARCH" --cache-dir=/tmp "$ROOTFS_SUITE" "$ROOTFS_DIR" "$ROOTFS_MIRROR"

    if [[ ! -f "$TAR_FILE" ]]; then
        puts_warning "File not found! Creating..."
        (cd "$ROOTFS_DIR" && tar --warning=no-file-changed -I 'xz -9' -cvf "$TAR_FILE" --exclude="var/cache/apt/archives" .)
    else
        puts_info "File found! Cleaning..."
        rm -rf "$TAR_FILE" && (cd "$ROOTFS_DIR" && tar --warning=no-file-changed -I 'xz -9' -cvf "$TAR_FILE" --exclude="var/cache/apt/archives" .)
    fi

    puts_success "Root filesystem creation completed successfully!"
}


# -- Main script logic.

if [[ $# -eq 0 ]]; then
    echo "Error: No command provided." >&2
    show_help
    exit 1
fi

case "$1" in
    create)
        create_rootfs
        ;;
    help)
        show_help
        ;;
    *)
        echo "Error: Unknown command '$1'." >&2
        show_help
        exit 1
        ;;
esac
